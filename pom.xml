<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>my.code</groupId>
	<artifactId>a-java-playground</artifactId>
	<version>0.0.1-SNAPSHOT</version>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.10</version>
		</dependency>
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-core</artifactId>
			<version>1.3</version>
		</dependency>
	</dependencies>

	<properties>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
	</properties>

	<build>
		<plugins>
			<!-- Create special JAR for Java Agent, because agent class has to be 
				in JAR to be loaded to target JVM -->
			<!-- See A07InjectMBeanToUnsuspectedApplicationAndThenCallItViaJMXF -->
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<finalName>add-mbean-agent</finalName>
					<appendAssemblyId>false</appendAssemblyId>
					<descriptors>
						<descriptor>/src/main/java/my/code/a003/process/agent/assembly.xml</descriptor>
					</descriptors>
					<archive>
						<!-- For some reason archiver plugin completely ignores explicit MANIFEST>MF 
							file I prepared -->
						<!-- <manifestFile>src/main/java/my/code/a003/process/agent/MANIFEST.MF</manifestFile> -->
						<!-- I had to resolve to use manifestEntries -->
						<manifestEntries>
							<Agent-Class>my.code.a003.process.agent.AddMBeanAgent</Agent-Class>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>default-tools.jar</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<!-- The code testing if required servers are running uses sun.jvmstat.monitor 
				package from JDK distributed tools.jar. See ActiveJavaVirtualMachineExplorer -->
			<dependencies>
				<dependency>
					<groupId>com.sun</groupId>
					<artifactId>tools</artifactId>
					<version>8</version><!-- irrelevant -->
					<scope>system</scope>
					<systemPath>${java.home}/../lib/tools.jar</systemPath>
				</dependency>
			</dependencies>
		</profile>
	</profiles>
</project>